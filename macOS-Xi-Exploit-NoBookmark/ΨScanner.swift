import Foundation

struct ΨScanner {
    static func analyze(path: String) {
        let fileURL = URL(fileURLWithPath: path)
        let pid = ProcessInfo.processInfo.processIdentifier
        print("🔎 ΨScanner activated")
        print("  PID: \(pid)")
        print("  Target Path: \(fileURL.path)")

        guard FileManager.default.fileExists(atPath: fileURL.path) else {
            print("❌ File does not exist.")
            return
        }

        do {
            let data = try Data(contentsOf: fileURL)
            print("✅ Ξ minted: File read succeeded. Size: \(data.count) bytes")
        } catch {
            print("❌ Ξ failed: Cannot read file. Error: \(error.localizedDescription)")
        }

        let sandbox = isSandboxed()
        print("  Sandbox status: \(sandbox ? "🔒 Sandboxed" : "🔓 Not sandboxed")")
    }

    static func isSandboxed() -> Bool {
        let env = ProcessInfo.processInfo.environment
        return env["APP_SANDBOX_CONTAINER_ID"] != nil
    }
}

// MARK: - Entry Point

let args = CommandLine.arguments
guard args.count == 2 else {
    print("Usage: ./ΨScanner <absolute-file-path>")
    exit(1)
}

ΨScanner.analyze(path: args[1])
